version: '3'

services:
  <projeto>-php:
    image: brunoviana/magento-php-7.1:1.0
    
    # user: ${USERID}
    
    container_name: <projeto>-php
    
    restart: unless-stopped
    
    tty: true
    
    # environment:
      # SERVICE_NAME: app
      # SERVICE_TAGS: dev
      # XDEBUG_CONFIG: remotehost=${REMOTE_HOST}
      # PHP_IDE_CONFIG: serverName=${SERVER_NAME}
    
    working_dir: /var/www/
    
    volumes:
    - <projeto>-volume:/var/www/:delegated
    - ./config/php.ini:/usr/local/etc/php/php.ini
    # # - ./config/custom-xdebug.ini:/usr/local/etc/php/conf.d/custom-xdebug.ini
    - ./image/bin/get-magento2:/usr/local/bin/get-magento2
    - ./image/bin/install-magento2:/usr/local/bin/install-magento2
    - ./image/bin/redis-flush:/usr/local/bin/redis-flush
    - ./image/bin/setup-cron:/usr/local/bin/setup-cron
    - ./image/bin/xdebug:/usr/local/bin/xdebug
    # - ./users/env.sample.php:/var/www/app/etc/env.sample.php
    
    networks:
    - <projeto>-network

  #Nginx Service
  <projeto>-nginx:
    image: nginx:alpine
    
    container_name: <projeto>-nginx
    
    restart: unless-stopped
    
    tty: true
    
    working_dir: /var/www/
    
    ports:
    - "80:80"
    - "443:443"
    
    volumes:
    # - ./nginx/logs:/var/log/nginx
    - <projeto>-volume:/var/www/:delegated
    - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
    
    networks:
    - <projeto>-network

  <projeto>-db:
    image: mariadb
    # image: mysql:5.7.22

    ports:
      - ${DB_PORT}:3306
    
    restart: unless-stopped
    
    container_name: <projeto>-db
      
    tty: true

    environment:
    - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    - MYSQL_DATABASE=magento
    - MYSQL_USER=magento
    - MYSQL_PASSWORD=magento
  
    volumes:
    - <projeto>-dbdata:/var/lib/mysql
    # - ./mysql/my.cnf:/etc/mysql/my.cnf
  
    networks:
    - <projeto>-network

  <projeto>-phpmyadmin:
    image: phpmyadmin/phpmyadmin
    
    environment:
    - PMA_HOST=db
    - PMA_USER=root
    - PMA_PASSWORD=root
    - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    
    ports:
    - 8080:80
  
    networks:
    - <projeto>-network

  <projeto>-redis:
    image: redis

    container_name: <projeto>-redis
    
    ports:
    - 6379
    
    networks:
    - <projeto>-network

  <projeto>-redis-session:
    image: redis

    container_name: <projeto>-redis-session
    
    ports:
    - 6379
    
    networks:
    - <projeto>-network

  <projeto>-mailhog:
    image: mailhog/mailhog
    
    ports:
    - 1025:1025
    - 8025:8025
    
    networks:
    - <projeto>-network

#Docker Networks
networks:
  <projeto>-network:
    driver: bridge

volumes:
  
  <projeto>-dbdata:
    driver: local
  
  <projeto>-volume:
    driver_opts:
        type: "nfs"
        o: addr=${REMOTE_HOST},rw,nolock,hard,nointr,nfsvers=3
        device: ":${PATH_LOCAL}"
